// <auto-generated />
using System;
using Animals.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Animals.Infrastructure.Migrations
{
    [DbContext(typeof(AnimalsDbContext))]
    [Migration("20250221112035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Animals.Infrastructure.Entities.AnimalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Reptile"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bird"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 6,
                            Name = "SmallPet"
                        },
                        new
                        {
                            Id = 7,
                            Name = "FarmPet"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Spider"
                        });
                });

            modelBuilder.Entity("Animals.Infrastructure.Entities.AnimalProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("AnimalProfiles");
                });

            modelBuilder.Entity("Animals.Infrastructure.Entities.UserAnimalsEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId", "AnimalId")
                        .IsUnique();

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Animals.Infrastructure.Entities.UserAnimalsEntity", b =>
                {
                    b.HasOne("Animals.Infrastructure.Entities.AnimalEntity", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Animals.Infrastructure.Entities.AnimalEntity", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
