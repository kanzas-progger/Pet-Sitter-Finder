// <auto-generated />
using System;
using Boards.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Boards.Infrastructure.Migrations
{
    [DbContext(typeof(BoardsDbContext))]
    [Migration("20250303102648_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Boards.Infrastructure.Entities.BoardAnimalsEntity", b =>
                {
                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.HasKey("BoardId", "AnimalId");

                    b.ToTable("BoardAnimals");
                });

            modelBuilder.Entity("Boards.Infrastructure.Entities.BoardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("SitterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("Boards.Infrastructure.Entities.BoardAnimalsEntity", b =>
                {
                    b.HasOne("Boards.Infrastructure.Entities.BoardEntity", "Board")
                        .WithMany("BoardAnimals")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Boards.Infrastructure.Entities.BoardEntity", b =>
                {
                    b.Navigation("BoardAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
