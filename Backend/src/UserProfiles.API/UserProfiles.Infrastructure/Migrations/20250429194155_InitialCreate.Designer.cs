// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserProfiles.Infrastructure;

#nullable disable

namespace UserProfiles.Infrastructure.Migrations
{
    [DbContext(typeof(UserProfilesDbContext))]
    [Migration("20250429194155_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.OwnerProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("About")
                        .HasMaxLength(2500)
                        .HasColumnType("character varying(2500)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fathername")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OwnerProfiles");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.OwnerProfilePhotosEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerProfileId");

                    b.ToTable("OwnerProfilePhotos");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.SitterProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("About")
                        .HasMaxLength(2500)
                        .HasColumnType("character varying(2500)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fathername")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<decimal>("PricePerDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m);

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("text");

                    b.Property<int>("RateCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<decimal>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m);

                    b.Property<Guid>("SitterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("SitterProfiles");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.SitterProfilePhotosEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SitterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SitterProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SitterProfileId");

                    b.ToTable("SitterProfilePhotos");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.OwnerProfilePhotosEntity", b =>
                {
                    b.HasOne("UserProfiles.Infrastructure.Entities.OwnerProfileEntity", "OwnerProfile")
                        .WithMany("ProfilePhotos")
                        .HasForeignKey("OwnerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerProfile");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.SitterProfilePhotosEntity", b =>
                {
                    b.HasOne("UserProfiles.Infrastructure.Entities.SitterProfileEntity", "SitterProfile")
                        .WithMany("ProfilePhotos")
                        .HasForeignKey("SitterProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SitterProfile");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.OwnerProfileEntity", b =>
                {
                    b.Navigation("ProfilePhotos");
                });

            modelBuilder.Entity("UserProfiles.Infrastructure.Entities.SitterProfileEntity", b =>
                {
                    b.Navigation("ProfilePhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
