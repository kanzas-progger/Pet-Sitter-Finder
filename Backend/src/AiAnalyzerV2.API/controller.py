from flask import Flask, request, jsonify
from openai import OpenAI
from flask_cors import CORS
import json

template = """–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –°–ò–¢–¢–ï–†–£ (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤):

üìä –†–µ–π—Ç–∏–Ω–≥: 4.7 –∏–∑ 5
–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: 47
–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç–∑—ã–≤–æ–≤: 95%

–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –í–ò–î–ê–ú –ñ–ò–í–û–¢–ù–´–•:
üêï –°–æ–±–∞–∫–∏: 28 –æ—Ç–∑—ã–≤–æ–≤
üê± –ö–æ—à–∫–∏: 15 –æ—Ç–∑—ã–≤–æ–≤
ü¶ú –ü—Ç–∏—Ü—ã: 3 –æ—Ç–∑—ã–≤–∞
ü¶é –†–µ–ø—Ç–∏–ª–∏–∏: 1 –æ—Ç–∑—ã–≤

–ö–õ–Æ–ß–ï–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:
‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ —É—Ö–æ–¥–∞: 92%
üì± –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è: 89%
‚è∞ –ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å: 95%
üí∞ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ: 88%

–°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:
‚Ä¢ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ—Ä–æ–¥–∞–º–∏ —Å–æ–±–∞–∫
‚Ä¢ –û—Ç–ª–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
‚Ä¢ –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å
‚Ä¢ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –¥–µ—Ç–∞–ª—è–º

–ü–û–°–õ–ï–î–ù–ò–ï –¢–ï–ù–î–ï–ù–¶–ò–ò:
üìà –£–ª—É—á—à–µ–Ω–∏–µ: –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –æ—Ç—á–µ—Ç–æ–≤
üìâ –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è: –≥–∏–±–∫–æ—Å—Ç—å –≥—Ä–∞—Ñ–∏–∫–∞

–ê–ù–ê–õ–ò–ó –£–î–û–í–õ–ï–¢–í–û–†–ï–ù–ù–û–°–¢–ò:
üòä –î–æ–≤–æ–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: 91%
üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã: 7%
üòü –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã: 2%

–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –£–°–õ–£–ì–ê–ú:
‚Ä¢ –ü–µ—Ä–µ–¥–µ—Ä–∂–∫–∞ –Ω–∞ –¥–æ–º—É: 65%
‚Ä¢ –í—ã–≥—É–ª: 25%
‚Ä¢ –î–Ω–µ–≤–Ω–æ–π –ø—Ä–∏—Å–º–æ—Ç—Ä: 10%

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ö–õ–ò–ï–ù–¢–û–í:
"–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –¥—Ä—É–∑—å—è–º": 94%
"–û–±—Ä–∞—â—É—Å—å —Å–Ω–æ–≤–∞": 89%"""


app = Flask(__name__)
CORS(app, resources={r"/api/*": {"origins": "https://localhost:5173"}})


@app.route('/api/reviews/analize', methods=['POST'])
def chat():
    request_data = request.get_json()
    
    
    reviews_data = request_data['reviews_data']
    data = json.dumps(reviews_data, ensure_ascii=False, indent=2)
    
    
    try:
        client = OpenAI(
        base_url="https://openrouter.ai/api/v1",
        api_key="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",
        )
        
        completion = client.chat.completions.create(
            extra_headers={
                "HTTP-Referer": "localhost",  
                "X-Title": "pet-sitter-finder",      
            },
            extra_body={},
            model="deepseek/deepseek-chat:free",
            messages=[
                {
                    "role": "user",
                    "content": f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–∏ –æ—Ç–∑—ã–≤—ã –æ –ø–µ—Ä–µ–¥–µ—Ä–∂–∫–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö:
             {data}
            
             –ò —Å–¥–µ–ª–∞–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–º–µ—Ä–Ω–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –æ—Ç —Ç–æ–≥–æ, 
             —á—Ç–æ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ –æ—Ç–∑—ã–≤–∞—Ö, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä {template}"""
                }
            ]
        )
        
        response_content = completion.choices[0].message.content
        
        return jsonify({
            'success': True,
            'response': response_content
        })
    
    except Exception as e:
        return jsonify({
            'success': False,
            'error': str(e)
        }), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0',debug=True, port=5100)


