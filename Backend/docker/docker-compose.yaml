services:
  user-profiles-api:
    build:
      context: ..
      dockerfile: src/UserProfiles.API/Dockerfile
    container_name: user-profiles-api
    ports:
      - "5002:5002"
      - "7002:7002"
    networks:
      - app_network
    depends_on:
      - rabbitmq
      - redis
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      
  requests-api:
    build:
      context: ..
      dockerfile: src/Requests.API/Dockerfile
    container_name: requests-api
    ports:
      - "5006:5006"
      - "7004:7004"
    networks:
      - app_network
      
  reviews-api:
    build:
      context: ..
      dockerfile: src/Reviews.API/Dockerfile
    container_name: reviews-api
    ports:
      - "5003:5003"
      - "7000:7000"
    networks:
      - app_network
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq

  animals-api:
    build:
      context: ..
      dockerfile: src/Animals.API/Dockerfile
    container_name: animals-api
    ports:
      - "5004:5004"
      - "7001:7001"
    networks:
      - app_network
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
       
  boards-api:
    build:
      context: ..
      dockerfile: src/Boards.API/Dockerfile
    container_name: boards-api
    ports:
      - "5005:5005"
    networks:
      - app_network
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network
      
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - app_network

volumes:
  rabbitmq_data:
  redis_data:

networks:
  app_network:
    name: app_network

